/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/dynamic-macros.h>

#define BASE 0
#define LOWER 1

/ {
    macros {
        dm1: dyn-macro-1 {
            compatible = "zmk,behavior-dynamic-macro";
            #binding-cells = <1>;
        };
        dm2: dyn-macro-2 {
            compatible = "zmk,behavior-dynamic-macro";
            #binding-cells = <1>;
        };
        bt_m: bt-macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &bt BT_CLR>;
        };
    };

    behaviors {
        bt_lp: behavior_bt_lp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <1000>;
            bindings = <&bt_m>, <&none>;
        };
        rst_lp: behavior_rst_lp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <1000>;
            bindings = <&bootloader>, <&sys_reset>;
        };
    };

    swap: swapper {
        compatible = "zmk,behavior-tri-state";
        #binding-cells = <0>;
        bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
        ignored-key-positions = <42 55>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ┏━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┓            ┏━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┓
// ┃ ESC ┃  1  ┃  2  ┃  3  ┃  4  ┃  5  ┃PLAY1┃            ┃PLAY2┃  6  ┃  7  ┃  8  ┃  9  ┃  0  ┃  -  ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫            ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃ TAB ┃  Q  ┃  W  ┃  E  ┃  R  ┃  T  ┃  `  ┃            ┃  [  ┃  Y  ┃  U  ┃  I  ┃  O  ┃  P  ┃  =  ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫     ┃            ┃     ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃ CTRL┃  A  ┃  S  ┃  D  ┃  F  ┃  G  ┣━━━━━┫            ┣━━━━━┫  H  ┃  J  ┃  K  ┃  L  ┃  ;  ┃  '  ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┃  \  ┃            ┃  ]  ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃ SHFT┃  Z  ┃  X  ┃  C  ┃  V  ┃  B  ┃     ┃            ┃     ┃  N  ┃  M  ┃  ,  ┃  .  ┃  /  ┃SHFT ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━┻━━━━━╋━━━━━╋━━━━━┫            ┣━━━━━╋━━━━━╋━━━━━┻━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃SLEEP┃ BRT-┃ BRT+┃           ┃ DEL ┃     ┃            ┃     ┃ BSP ┃           ┃VOL- ┃VOL+ ┃MUTE ┃
// ┗━━━━━┻━━━━━┻━━━━━┛           ┣━━━━━┫ SPC ┃            ┃ ENT ┣━━━━━┫           ┗━━━━━┻━━━━━┻━━━━━┛
//                               ┃ LWR ┃     ┃            ┃     ┃ LWR ┃
//                               ┗━━━━━┻━━━━━┛            ┗━━━━━┻━━━━━┛
            bindings = <
&kp ESC   &kp N1       &kp N2       &kp N3 &kp N4 &kp N5    &dm1 PLAY      &dm2 PLAY  &kp N6    &kp N7 &kp N8    &kp N9       &kp N0       &kp MINUS
&kp TAB   &kp Q        &kp W        &kp E  &kp R  &kp T     &kp GRAVE      &kp LBKT   &kp Y     &kp U  &kp I     &kp O        &kp P        &kp EQUAL
&kp LCTRL &kp A        &kp S        &kp D  &kp F  &kp G     &kp BSLH       &kp RBKT   &kp H     &kp J  &kp K     &kp L        &kp SEMI     &kp SQT
&kp LSHFT &kp Z        &kp X        &kp C  &kp V  &kp B                               &kp N     &kp M  &kp COMMA &kp DOT      &kp FSLH     &kp RSHFT
&kp LG(L) &kp C_BRI_DN &kp C_BRI_UP               &kp DEL   &kp SPACE      &kp ENTER  &kp BSPC                   &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
                                                  &mo LOWER &none          &none      &mo LOWER
            >;
        };

        lower_layer {
// ┏━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┓            ┏━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┳━━━━━┓
// ┃ RST ┃  F1 ┃  F2 ┃  F3 ┃  F4 ┃  F5 ┃ REC1┃            ┃REC2 ┃ F6  ┃ F7  ┃ F8  ┃ F9  ┃ F10 ┃ F11 ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫            ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃AlTAB┃ WinQ┃ WinW┃ WinE┃ WinR┃ WinT┃  `  ┃            ┃  [  ┃WinY ┃WinU ┃  ↑  ┃WinO ┃WinP ┃ F12 ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫     ┃            ┃     ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃ CTRL┃ WinA┃ WinS┃ WinD┃ WinF┃ WinG┣━━━━━┫            ┣━━━━━┫WinH ┃  ←  ┃  ↓  ┃  →  ┃Win; ┃Win' ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┃  \  ┃            ┃  ]  ┣━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃ SHFT┃ BT1 ┃ BT2 ┃ BT3 ┃ BT4 ┃ BT5 ┃     ┃            ┃     ┃WinN ┃WinM ┃Win, ┃Win. ┃Win/ ┃SHFT ┃
// ┣━━━━━╋━━━━━╋━━━━━╋━━━━━┻━━━━━╋━━━━━╋━━━━━┫            ┣━━━━━╋━━━━━╋━━━━━┻━━━━━╋━━━━━╋━━━━━╋━━━━━┫
// ┃BTCLR┃ BRT-┃ BRT+┃           ┃AltDL┃     ┃            ┃     ┃ BSP ┃           ┃VOL- ┃VOL+ ┃MUTE ┃
// ┗━━━━━┻━━━━━┻━━━━━┛           ┣━━━━━┫ SPC ┃            ┃ ENT ┣━━━━━┫           ┗━━━━━┻━━━━━┻━━━━━┛
//                               ┃ Win ┃     ┃            ┃     ┃ Win ┃
//                               ┗━━━━━┻━━━━━┛            ┗━━━━━┻━━━━━┛
            bindings = <
&rst_lp 0 0   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &dm1 RECORD      &dm2 RECORD &kp F6    &kp F7    &kp F8   &kp F9      &kp F10   &kp F11
&swap         &kp LG(Q)    &kp LG(W)    &kp LG(E)    &kp LG(R)    &kp LG(T)    &trans           &trans      &kp LG(Y) &kp LG(U) &kp UP   &kp LG(O)   &kp LG(P) &kp F12
&trans        &kp LG(A)    &kp LG(S)    &kp LG(D)    &kp LG(F)    &kp LG(G)    &trans           &trans      &kp LG(H) &kp LEFT  &kp DOWN &kp RIGHT   &trans    &trans
&trans        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                              &kp LG(N) &trans    &trans   &kp LG(DOT) &trans    &trans
&bt_lp BT_CLR &trans       &trans                                 &kp LA(DEL)  &trans           &trans      &trans                       &trans      &trans    &trans
                                                                  &kp LGUI     &none            &none       &kp RGUI
            >;
        };
    };
};